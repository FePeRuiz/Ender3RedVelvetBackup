# Macros for a modified Ender-3 v2 with Sprite Pro Extruder,
# CR Touch, with a 4.2.7 silent board

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0} 
# and END_PRINT.

#=====================================================
# Prusa SLicer Settings
#=====================================================

# Untick the "Emit Temperature commands automatically" setting

#=====================================================
# START PRINT
#=====================================================

[gcode_macro START_PRINT]
gcode:

    RESPOND MSG="Preparing to print"
    ACORDAR
    #G91
    #G0 Z10 F240
    #G90
    #G28 Z
    # Get first-layer bed-temp from slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    # Get first-layer extruder-temp from slicer
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Setup KAMP variables
    #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_LINE_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1 Z_HEIGHT=.3 PURGE_AMOUNT=20 LINE_LENGTH=25
    G90 # use absolute coordinates
    M83 # extruder relative mode
    RESPOND MSG="Warming up for bed leveling"
    status_heating
    M104 S170 # set extruder temp for bed leveling
    status_bedheating
    M140 S{BED_TEMP} # set bed temp
    M109 S170 # wait for bed leveling temp
    M190 S{BED_TEMP} ; wait for bed temp
    G28 # home all axis
    # mesh bed
    BED_MESH_CLEAR
    status_leveling
    RESPOND MSG="KAMP Adaptive Bed Meshing"
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default
    RESPOND MSG="Parking"
    Smart_Park
    RESPOND MSG="Heating to print temp"
    status_heating
    M104 S{EXTRUDER_TEMP}# set extruder temp
    G0 Z40 F240
    RESPOND MSG="Clean bed and nozzle"
    status_cleaning
    G0 X2 Y0 F3000 #Clean Nozzle and Bed
    G0 X30 Y0 F3000 #Clean Nozzle and Bed
    RESPOND MSG="Waiting Extruder Temp"
    status_heating
    M109 S{EXTRUDER_TEMP} # wait for extruder temp
    RESPOND MSG="KAMP Line Purge"
    status_printing
    LINE_PURGE # purge nozzle
    RESPOND MSG="Print Started"

#=====================================================
# START PRINTg82
#=====================================================

[gcode_macro START_PRINTM82]
gcode:

    RESPOND MSG="Preparing to print"
    #G91
    #G0 Z10 F240
    #G90
    #G28 Z
    # Get first-layer bed-temp from slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    # Get first-layer extruder-temp from slicer
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Setup KAMP variables
    #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_LINE_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1 Z_HEIGHT=.3 PURGE_AMOUNT=20 LINE_LENGTH=25
    G90 # use absolute coordinates
    M82 # extruder relative mode
    RESPOND MSG="Warming up for bed leveling"
    M104 S170 # set extruder temp for bed leveling
    M140 S{BED_TEMP} # set bed temp
    M109 S170 # wait for bed leveling temp
    M190 S{BED_TEMP} ; wait for bed temp
    G28 # home all axis
    # mesh bed
    BED_MESH_CLEAR
    RESPOND MSG="KAMP Adaptive Bed Meshing"
    BED_MESH_CALIBRATE
    RESPOND MSG="Heating to print temp"
    M104 S{EXTRUDER_TEMP}# set extruder temp
    G0 Z40 F240
    RESPOND MSG="Clean bed and nozzle"
    G0 X2 Y200 F3000 #Clean Nozzle and Bed
    RESPOND MSG="Waiting Extruder Temp"
    M109 S{EXTRUDER_TEMP} # wait for extruder temp
    RESPOND MSG="KAMP Line Purge"
    LINE_PURGE # purge nozzle
    RESPOND MSG="Print Started"
#=====================================================
# END PRINT
#=====================================================

[gcode_macro END_PRINT]
gcode:

    #Fix-up extruder
    RESPOND MSG="Print Finished"
    status_part_ready
    G91
    G1 E-.5 Z0.2 F2400
    G1 X5 Y5 F6000
    G1 Z10
    G90

    #Present print
    G1 Z{printer.toolhead.position.z + 10} F600
    G1 X-15 Y220 F6000
    M106 S0
    M104 S0
    M140 S0

    #Disable Steppers
    M84 X Y E

#=====================================================
# BUILD THE BED MESH
#=====================================================
# G29 that does (1) home all (2) get bed mesh (3) move 
# nozzle to corner so it doesnt ooze on the bed while heating up.
# Change save to "save=yourprinter_mesh" cant use default

[gcode_macro G29]
gcode:
    G28
    status_meshing
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=default

#=====================================================
# PARK PRINTER
#=====================================================

[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    status_busy
    M117 Parking toolhead
    G91
    G1 Z10 F600 # move up 5 mm
    G90
    G1 X5 Y200 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking


#======================================================
# LOAD FILAMENT
#======================================================

[gcode_macro Load_Filament]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    status_loading
    M117 Loading Filament
    #M104 S185 # set extruder temp for bed leveling
    #M109 S185 # wait for bed leveling temp
    HEAT
    M83
    G92 E0.0
    G1 E300 F200  # Load filament into sprite and prime 5mm 
    G92 E20
    status_idle
    RESTORE_GCODE_STATE NAME=loading_filament

#======================================================
# UNLOAD FILAMENT
#======================================================

[gcode_macro Unload_Filament]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    status_unloading
    {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    HOME_CHECK
    M125 # park
    M117 Unloading Filament 
    M190 S{TARGET_TEMP}
    #M104 S185 # set extruder temp for bed leveling
    #M109 S185 # wait for bed leveling temp
    #HEAT
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    G1 E-450 F1200 # Unload filament from sprite 5mm 
    G92 E-5
    status_idle
    RESTORE_GCODE_STATE NAME=unloading_filament

#======================================================
# FILAMENT CHANGE
#======================================================

[gcode_macro Filament_Change]
gcode:
    # Save the G-code state
    SAVE_GCODE_STATE NAME=filament_change

    # Move the extruder to the side
    G1 X5 Y200 F4000
    
    # Unload the filament
    {% if printer.extruder.can_reverse %} 
        G91
        G1 E-10 F100
        G92 E0
        G90
    {% else %}
        M117 Extruder cannot reverse
    {% endif %}
    
    # Wait for user interaction to confirm new roll of filament
    M117 Please insert new filament and confirm
    
    # Prime the nozzle with new filament
    G91
    G1 E10 F100
    G92 E0
    G1 E5 F200
    G90

    # Restore the G-code state
    RESTORE_GCODE_STATE NAME=filament_change

#=====================================================
# PAUSE
#=====================================================

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    status_busy
    ##### set defaults #####
    {% set x = params.X|default(5) %}      #edit to your park position
    {% set y = params.Y|default(200) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(2) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    {% else %}
    {action_respond_info("Printer not homed")}
    {% endif %}

#=====================================================
# RESUME
#=====================================================

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    status_printing
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
    {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{e} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

#=====================================================
# CANCEL
#=====================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    G91 # Set to incremental mode
    G0 Z10 F600 # raise extruder
    G90 # Set back to absolute mode
    TURN_OFF_HEATERS
    G0 X5 Y200 # clear print
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#=====================================================
# M0 PAUSE FROM MARLIN
#=====================================================
[gcode_macro M0]
gcode: 
    PAUSE

#=====================================================
# M600 FILAMENT CHANGE FROM MARLIN/CURA
#=====================================================
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


#[gcode_macro M600]
#gcode:
  #  Filament_Change

[gcode_macro START_FAILEDPRINT]
gcode:

    RESPOND MSG="Preparing to print"
    # Get first-layer bed-temp from slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    # Get first-layer extruder-temp from slicer
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    G90 # use absolute coordinates
    M83 # extruder relative mode
    RESPOND MSG="Warming up for bed leveling"
    M104 S170 # set extruder temp for bed leveling
    M140 S{BED_TEMP} # set bed temp
    M109 S170 # wait for bed leveling temp
    M190 S{BED_TEMP} ; wait for bed temp
   # G28 # home all axis
    # mesh bed
    
    RESPOND MSG="Heating to print temp"
    M104 S{EXTRUDER_TEMP}# set extruder temp
    #G0 Z40 F240
    #RESPOND MSG="Clean bed and nozzle"
    #G0 X2 Y200 F3000 #Clean Nozzle and Bed
    M109 S{EXTRUDER_TEMP} # wait for extruder temp
    #RESPOND MSG="KAMP Line Purge"
    #LINE_PURGE # purge nozzle
    RESPOND MSG="Print Started"

[gcode_macro _DISABLE_FS]
description: placeholder, disables filament sensor that might trigger an M600 in the middle of a load/unload/M600...
gcode:
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0
 
[gcode_macro _ENABLE_FS]
description: placeholder, enables filament sensor
gcode:
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1
 
[gcode_macro HEAT]
description: Heats up the extruder to get ready for Filament Change
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  {% set Z = params.Z|default(50)|float %}
  {% set X = params.X|default(110)|float %}
  {% set Y = params.Y|default(110)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X{X} Y{Y} F6000
 
[gcode_macro COOL]
description: Turns off all heaters
gcode:
  TURN_OFF_HEATERS
  status_cooling

[gcode_macro BED_TRAMMING_1]
description: Heats bed and starts process to level the bed with the screws
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  HOME_CHECK
  M190 S{BED_TEMP}
  status_leveling
  SCREWS_TILT_CALCULATE
 
[gcode_macro BED_TRAMMING_2]
description: Continues the bed screw leveling process
gcode:
  SCREWS_TILT_CALCULATE
 
[gcode_macro BED_MESH]
description: Heats bed, makes a mesh and saves it
gcode:
  status_leveling
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  HOME_CHECK
  M190 S{BED_TEMP}
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro NOZZLE_MID]
description: Moves nozzle to the center of the bed
gcode:
  {% set Z = params.Z|default(10)|float %}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X110 Y110 F6000
 
[gcode_macro home_check]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
 
[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    HOME_CHECK
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X10 Y200 F4000
 
[gcode_macro ZOffset_Setup]
description: Starts Z-Offset Calibration, under 30 degrees Celsius
gcode:
  status_leveling
  {% if printer.heater_bed.temperature > 60 %}
    {action_respond_info("Bed temperature too high")}
  {% elif printer.extruder.temperature > 60 %}
    {action_respond_info("Extruder temperature too High")}
  {% else %}
  G28
  G1 X117.5 Y95.3 F6000
  PROBE_CALIBRATE
  {% endif %}


[gcode_macro Z_Down_01]
description: Moves Z down by 0.1
gcode:
  TESTZ Z=-.1
 
[gcode_macro Z_Up_01]
description: Moves Z up by 0.1
gcode:
  TESTZ Z=+.1
 
[gcode_macro Z_Low_Half]
description: Sets Z between current value and previous lower value
gcode:
  TESTZ Z=-
 
[gcode_macro Z_High_Half]
description: Sets Z between current value and previous higher value
gcode:
  TESTZ Z=+
 
[gcode_macro Accept_Save]
description: Accepts the Z-Offset and saves the config
gcode:
  ACCEPT
  SAVE_CONFIG
 
[gcode_macro Abort_Setup]
description: Aborts the Z-Offset calibration
gcode:
  ABORT

